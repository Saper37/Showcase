from sklearn import datasets
from sklearn import svm
from sklearn import tree
from sklearn.model_selection import train_test_split
from matplotlib import pyplot

import numpy as np

target = [ 8.39, 8.38, 8.19, 7.67, 9.22, 7.98, 8.13, 8.03, 9.39, 7.99, 9.68, 11.0, 7.57, 8.36, 9.13, 7.88, 8.94, 8.68, 8.51, 7.72, 9.56, 8.28, 10.8, 8.79, 6.21, 11.82, 10.39, 9.3, 8.56, 8.95, 9.0, 11.96, 9.13, 8.75, 9.49, 9.8, 10.62, 7.9, 8.78, 9.94, 9.64, 9.28, 8.02, 7.6, 7.44, 7.78, 7.59, 9.83, 9.37, 8.03, 9.07, 9.19, 7.3, 11.14, 7.4, 8.5, 8.17, 9.8, 9.68, 9.58, 8.99, 8.07, 12.7, 8.59, 10.4, 8.54, 7.51, 9.33, 9.53, 8.33, 7.58, 8.09, 7.77, 11.09, 11.58, 8.37, 9.32, 9.32, 7.17, 7.83, 8.52, 7.65, 8.45, 8.88, 7.83, 9.68, 8.04, 7.88, 8.52, 7.53, 8.77, 8.22, 7.98, 8.7, 8.55, 9.62, 7.59, 8.05, 7.85, 8.18, 7.37, 10.1, 8.55, 5.96, 7.52, 9.09, 8.74, 8.61, 9.71, 8.21, 9.14, 7.79, 9.54, 9.1, 7.82, 7.74, 7.88, 10.76, 8.97, 10.05, 7.64, 6.9, 7.49, 7.86, 8.66, 10.49, 8.86, 7.75, 8.15, 7.85, 8.77, 7.4, 7.01, 8.56, 7.52, 8.09, 8.36, 8.99, 8.3, 7.79, 9.16, 9.26, 7.67, 7.48, 6.85, 10.22, 8.83, 7.0, 7.25, 7.65, 7.43, 7.97, 8.39, 7.85, 7.29, 8.79, 8.25, 9.8, 7.46, 7.04, 9.28, 9.83, 9.47, 7.22, 8.02, 7.7, 7.6, 11.7, 8.66, 6.55, 9.27, 8.83, 7.91, 13.1, 7.99, 9.35, 7.84, 9.56, 8.76, 7.9, 6.7, 7.24, 8.34, 9.1, 7.31, 8.88, 7.89, 8.91, 8.05, 8.24, 8.43, 7.72, 7.91, 8.74, 8.55, 8.89, 9.3, 6.56, 7.58, 7.37, 10.51, 10.08, 9.21, 9.72, 8.48, 9.13,9.58, 6.55, 7.77, 8.83, 8.28, 7.55, 8.35, 9.31, 6.99, 9.63, 8.06, 8.18, 8.92, 10.47, 9.65, 9.66, 8.53, 8.22, 6.9, 7.24, 7.92, 9.21, 8.44, 6.72, 7.11, 8.65, 8.25, 7.38, 8.12, 7.61, 6.49, 8.11, 6.86, 7.4, 8.45, 9.96, 7.38, 6.96, 6.86, 7.35, 8.08, 8.78, 6.88, 8.44, 7.03, 7.54,7.46, 8.75, 8.83, 7.62, 8.47, 6.1, 10.43, 7.86, 6.88, 9.99, 8.52, 8.48, 10.61, 6.84, 9.2, 6.61, 8.34, 7.66, 7.2, 8.35, 7.79, 7.16, 7.7,7.05, 6.92, 9.0, 10.52, 7.49, 8.14, 6.88, 7.14, 9.62, 8.22, 8.29, 10.4, 9.13, 8.17, 9.28, 8.54, 6.64, 9.94, 8.75, 8.01, 8.26, 7.88, 8.9, 6.33, 6.73, 8.12, 7.49, 8.32, 6.22, 7.37, 7.71, 8.17, 7.64, 7.49, 8.69, 7.65, 7.26, 8.28, 8.37, 7.36, 7.28, 7.84, 7.76, 6.69, 7.08, 7.51,6.76, 7.56, 6.66, 6.71, 8.31, 6.81, 7.14, 8.21, 6.76, 8.76, 7.1, 5.94, 7.13, 6.39, 8.38, 7.9, 7.95, 7.81, 7.92, 5.98, 6.41, 6.74, 5.84,9.0, 6.52, 8.73, 7.35, 8.22, 7.71, 9.22, 7.45, 8.84, 7.12, 6.51, 8.3, 6.42, 6.41, 7.84, 6.26, 5.92, 10.3, 7.46, 6.66, 6.28, 7.57, 7.3,5.04, 7.12, 9.29, 7.99, 8.23, 6.75, 7.98, 6.62, 7.03, 7.04, 8.44, 6.66, 7.82, 6.02, 5.19, 9.25, 7.3, 6.88, 8.45, 6.73, 6.61, 5.34, 6.67,6.23, 6.36, 6.44, 8.49, 7.25, 7.96, 4.9, 6.26, 7.21, 6.08, 6.61, 6.42, 6.73, 6.28, 5.46, 8.37, 7.28, 6.49, 6.12, 5.7, 6.58, 4.81, 5.5,7.99, 6.88, 7.67, 6.49, 5.9, 6.08, 6.24, 7.78, 6.34, 7.4, 8.33, 9.86, 6.13, 6.41, 6.62, 7.22, 6.06, 5.97, 5.56, 8.59, 6.68, 5.61, 6.57,6.34, 5.51, 7.2, 7.11, 6.45, 7.15, 7.34, 6.76, 6.76, 4.71, 6.38, 6.04, 6.57, 8.72, 5.93, 6.85, 6.42, 5.74, 7.32, 7.48, 6.06, 6.57, 5.67,8.01, 6.28, 6.79, 4.8, 6.47, 7.52, 8.04, 9.35, 9.61, 4.96, 6.91, 5.88, 6.83, 5.39, 8.14, 5.03, 6.43, 4.95, 6.14, 6.19, 8.91, 8.86, 9.52,6.88, 6.37, 9.74, 8.27, 6.66, 6.5, 5.51, 7.26, 6.65, 4.48, 7.81, 5.25, 8.24, 6.78, 6.01, 5.75, 4.72, 5.01, 5.33, 5.66, 6.57, 6.07, 6.12,6.54, 8.13, 6.5, 4.97, 6.94, 7.96, 5.92, 5.04, 7.97, 8.33, 5.2, 6.56, 6.11, 8.22, 5.48, 7.65, 6.87, 8.5, 5.32, 6.22, 4.77, 6.78, 9.5,8.59, 7.46, 6.92, 7.04, 6.14, 6.02, 6.11, 6.77, 9.06, 6.97, 4.99, 6.58, 6.52, 7.72, 5.78, 5.73, 7.94, 8.1, 5.64, 6.38, 6.15, 5.5, 5.83,4.85, 5.61, 5.4, 6.53, 4.21, 6.04, 5.66, 4.62, 5.65, 6.07, 4.56, 4.25, 7.46, 6.39, 5.03, 4.77, 7.34, 5.87, 5.88, 7.1, 7.28, 6.5, 6.53,5.55, 5.36, 5.98, 5.38, 4.0, 4.88, 7.4, 7.36, 5.48, 7.22, 5.74, 6.95, 5.42, 4.57, 3.75, 3.8, 5.78, 4.92, 4.47, 4.58, 6.4, 4.55, 6.18,4.43, 4.7, 4.9, 6.72, 5.4, 5.91, 6.72, 4.18, 3.4, 6.5, 5.17, 6.69, 7.31, 5.65, 4.38, 5.34, 5.4, 5.35, 6.21, 5.23, 5.83, 5.71, 4.27,6.2, 4.0, 5.67, 6.73, 5.8, 4.27, 4.8, 3.33, 5.47, 7.87, 4.53, 2.93, 5.97, 4.4, 5.1, 3.8, 3.17, 4.0, 3.93, 4.47, 4.13, 5.37, 3.8, 4.5,4.69, 4.95, 3.69, 2.94, 6.98, 4.32, 4.87, 5.3, 4.33, 4.05, 4.82, 2.2, 2.9, 4.67, 4.38, 2.31, 6.5, 5.0, 4.15, 5.45, 3.85, 4.15, 4.1,6.58, 7.17, 6.2, 2.97, 5.25, 5.12, 5.25, 4.0, 4.25, 5.37, 3.96, 2.92, 4.58, 4.21 ]
target = np.array( target )
target = target.reshape( -1, 1 )


X_train, X_test, Y_train, Y_test =  train_test_split( target, target, test_size=.4, random_state=0 )

#training = training.reshape( -1, 1 )
pyplot.figure( )
pyplot.hist( X_train )
pyplot.show( )

predict = np.array( [ [ 8.39 ] ] )
predict = predict.reshape( 1, -1 )

#clf = svm.SVC( gamma=0.001, C=100 )
#clf.fit( training, target )
#clf.predict( predict )

treg = tree.DecisionTreeRegressor( )
treg.fit( X_train, Y_train )
print( treg.score( X_test, Y_test ) )
